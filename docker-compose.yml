services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    container_name: php
    volumes:
      - ./projects:/var/www
    networks:
      - dev
    user: "${UID}:${GID}"
    environment:
      COMPOSER_CACHE_DIR: /var/www/.composer-cache

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - dev

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.local`)"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
    networks:
      - dev

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - php
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./projects:/var/www
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=HostRegexp(`{subdomain:[a-z]+}.local`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    networks:
      - dev

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dev

networks:
  dev:

volumes:
  mysql_data:
